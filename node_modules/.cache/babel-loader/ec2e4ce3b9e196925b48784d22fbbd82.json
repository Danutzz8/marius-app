{"ast":null,"code":"var _jsxFileName = \"F:\\\\Visual Studio Code\\\\React Apps - ZTM\\\\Clothing App\\\\marius-app\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SingUpContainer, SignUpTitle } from './sign-up.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    displayName: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('password don\\'t match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SingUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignUpTitle, {\n      children: \" I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sing-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password \",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"MT+LtkE8OxMvR4p0NkBA4ZKaOPs=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["F:/Visual Studio Code/React Apps - ZTM/Clothing App/marius-app/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SingUpContainer","SignUpTitle","SignUp","userCredentials","setUserCredentials","email","password","confirmPassword","displayName","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {  signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport { SingUpContainer, SignUpTitle } from './sign-up.styles';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setUserCredentials ] = useState({\r\n        email: '', \r\n        password: '',\r\n        confirmPassword: '',\r\n        displayName: ''\r\n      });\r\n\r\n    const {displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if(password !== confirmPassword) {\r\n            alert('password don\\'t match');\r\n            return;\r\n        }\r\n\r\n        signUpStart({ displayName, email, password })\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        setUserCredentials({...userCredentials, [name]: value});\r\n    }\r\n\r\n    return (\r\n        <SingUpContainer>\r\n            <SignUpTitle> I do not have an account</SignUpTitle>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sing-up-form' onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type= 'text'\r\n                    name= 'displayName'\r\n                    value= {displayName}\r\n                    onChange={handleChange}\r\n                    label= 'Display Name'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type= 'text'\r\n                    name= 'email'\r\n                    value= {email}\r\n                    onChange={handleChange}\r\n                    label= 'Email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type= 'text'\r\n                    name= 'displayName'\r\n                    value= {displayName}\r\n                    onChange={handleChange}\r\n                    label= 'Display Name'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type= 'password'\r\n                    name= 'password'\r\n                    value= {password}\r\n                    onChange={handleChange}\r\n                    label= 'Password'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type= 'password'\r\n                    name= 'confirmPassword'\r\n                    value= {confirmPassword}\r\n                    onChange={handleChange}\r\n                    label= 'Confirm Password '\r\n                    required\r\n                />\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                \r\n            </form>\r\n        </SingUpContainer>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n    )(SignUp);"]},"metadata":{},"sourceType":"module"}