{"ast":null,"code":"var _jsxFileName = \"F:\\\\Visual Studio Code\\\\React Apps - ZTM\\\\Clothing App\\\\marius-app\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 6\n  }, this);\n};\n\n_s(SignIn, \"IZNtchpPSwZHL4ONg2I7uqoLsIM=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["F:/Visual Studio Code/React Apps - ZTM/Clothing App/marius-app/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AAEA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,mBAAvC,QAAkE,kBAAlE;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA6C;AAAA;;AAC1D,QAAM,CAACM,eAAD,EAAkBC,cAAlB,IAAqCX,QAAQ,CAAC;AAClDY,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE;AAFwC,GAAD,CAAnD;AAMA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEAX,IAAAA,gBAAgB,CAACO,KAAD,EAAQC,QAAR,CAAhB;AACD,GAJD;;AAMA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC5B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AAEAT,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACS,IAAD,GAAQD;AAA9B,KAAD,CAAd;AACD,GAJD;;AAMC,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGM;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,YAAY,EAAEG,YAHd;AAIA,QAAA,KAAK,EAAEL,KAJP;AAKA,QAAA,KAAK,EAAC,OALN;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,KAAK,EAAEC,QAHP;AAIA,QAAA,YAAY,EAAEI,YAJd;AAKA,QAAA,KAAK,EAAC,UALN;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI,QAAC,mBAAD;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAEb,iBAFX;AAGE,UAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCF,CAvDD;;GAAMK,M;;KAAAA,M;;AA0DN,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADK;AAEtCC,EAAAA,gBAAgB,EAAE,CAACO,KAAD,EAAQC,QAAR,KAChBS,QAAQ,CAACjB,gBAAgB,CAAC;AAAEO,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH4B,CAAL,CAAnC;;AAMA,eAAeZ,OAAO,CACpB,IADoB,EAEpBoB,kBAFoB,CAAP,CAGXZ,MAHW,CAAf","sourcesContent":["import React,{ useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials ] = useState({\r\n    email: '', \r\n    password: '' \r\n  });\r\n\r\n  \r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n   return (\r\n     <SignInContainer>\r\n       <SignInTitle>I already have an account</SignInTitle>\r\n       <span>Sign in with your email and password</span>\r\n           <form onSubmit={handleSubmit}>\r\n               <FormInput \r\n               name='email' \r\n               type='email' \r\n               handleChange={handleChange}\r\n               value={email} \r\n               label='email' \r\n               required \r\n               />\r\n               <FormInput \r\n               name='password' \r\n               type='password' \r\n               value={password} \r\n               handleChange={handleChange} \r\n               label='password'\r\n               required \r\n               />\r\n               <ButtonsBarContainer>\r\n                   <CustomButton type='submit'> Sign In</CustomButton>\r\n                   <CustomButton \r\n                     type='button'\r\n                     onClick={googleSignInStart} \r\n                     isGoogleSignIn \r\n                   >\r\n                   Sign in with Google\r\n                   </CustomButton>\r\n               </ButtonsBarContainer>\r\n           </form>\r\n       </SignInContainer>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => \r\n    dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n  )(SignIn);"]},"metadata":{},"sourceType":"module"}